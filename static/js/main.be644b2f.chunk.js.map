{"version":3,"sources":["modules/CityComponent.js","modules/WeatherInfoComponent.js","App.js","index.js"],"names":["SearchBox","styled","form","ChooseCityLabel","span","WelcomeWeatherLogo","img","CityComponent","props","updateCity","fetchWeather","updateCityId","src","onSubmit","onChange","e","target","value","placeholder","type","WeatherInfoIcons","sunset","sunrise","humidity","wind","pressure","longitude","latitude","Location","Condition","WeatherInfoLabel","WeatherContainer","div","WeatherInfoContainer","InfoContainer","InfoIcon","InfoLabel","WeatherInfoComponent","name","WeatherComponent","timeStamp","weather","isDay","icon","includes","Math","floor","main","temp","description","coord","lon","lat","sys","country","id","Date","getHours","getMinutes","speed","Container","AppLabel","App","useState","cityid","city","updateWeather","a","preventDefault","Axios","get","response","data","fetchWeatherCityId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.be644b2f.chunk.js","sourcesContent":["import styled from \"styled-components\";\nimport React from \"react\";\n\nconst SearchBox = styled.form`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-evenly;\n  margin: 20px;\n  \n  \n\n  & input {\n    padding: 10px;\n    font-size: 14px;\n    border: none;\n    outline: none;\n    font-family: Montserrat;\n    font-weight: bold;\n    margin-bottom:2px\n  }\n  & button {\n    background-color: black;\n    font-size: 14px;\n    padding: 0 10px;\n    color: white;\n    border: none;\n    outline: none;\n    cursor: pointer;\n    font-family: Montserrat;\n    font-weight: bold;\n    margin-top:4px\n  }\n  & p {\n    text-align:center;\n  }\n`;\nconst ChooseCityLabel = styled.span`\n  color: black;\n  margin: 10px auto;\n  font-size: 18px;\n  font-weight: bold;\n`;\nconst WelcomeWeatherLogo = styled.img`\n  width: 140px;\n  height: 140px;\n  margin: 40px 20px auto;\n`;\nconst CityComponent = (props) => {\n  const { updateCity, fetchWeather ,updateCityId } = props;\n  return (\n    <>\n      <WelcomeWeatherLogo src={\"/reactweatherapp/icons/movingcloud.gif\"} />\n      <ChooseCityLabel>Find Weather of your city</ChooseCityLabel>\n      <SearchBox onSubmit={fetchWeather}>\n        <input\n          onChange={(e) => updateCity(e.target.value)}\n          placeholder=\"City\"\n        />\n        <p>Or</p>\n        <input placeholder=\"City ID\"\n        onChange={(e) => updateCityId(e.target.value)}\n        />\n        <button type={\"submit\"}>Search</button>\n      </SearchBox>\n    </>\n  );\n};\nexport default CityComponent;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nexport const WeatherInfoIcons = {\n    sunset: \"/reactweatherapp/icons/temp.svg\",\n    sunrise: \"/reactweatherapp/icons/temp.svg\",\n    humidity: \"/reactweatherapp/icons/humidity.svg\",\n    wind: \"/reactweatherapp/icons/wind.svg\",\n    pressure: \"/reactweatherapp/icons/pressure.svg\",\n    longitude: \"/reactweatherapp/icons/lon.svg\",\n    latitude: \"/reactweatherapp/icons/lat.svg\"\n};\nconst Location = styled.span`\n  margin: 15px auto;\n  text-transform: capitalize;\n  font-size: 28px;\n  font-weight: bold;\n`;\nconst Condition = styled.span`\n  margin: 20px auto;\n  text-transform: capitalize;\n  font-size: 14px;\n  & span {\n    font-size: 28px;\n  }\n`;\nconst WeatherInfoLabel = styled.span`\n  margin: 20px 25px 10px;\n  text-transform: capitalize;\n  text-align: start;\n  width: 90%;\n  font-weight: bold;\n  font-size: 14px;\n`;\n\nconst WeatherContainer = styled.div`\n  display: flex;\n  width: 100%;\n  margin: 30px auto;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst WeatherInfoContainer = styled.div`\n  display: flex;\n  width: 90%;\n  flex-direction: row;\n  justify-content: space-evenly;\n  align-items: center;\n  flex-wrap: wrap;\n`;\nconst InfoContainer = styled.div`\n  display: flex;\n  margin: 5px 10px;\n  flex-direction: row;\n  justify-content: space-evenly;\n  align-items: center;\n`;\nconst InfoIcon = styled.img`\n  width: 36px;\n  height: 36px;\n`;\nconst InfoLabel = styled.span`\n  display: flex;\n  flex-direction: column;\n  font-size: 14px;\n  margin: 15px;\n  & span {\n    font-size: 12px;\n    text-transform: capitalize;\n  }\n`;\n\nconst WeatherInfoComponent = (props) => {\n    const {name, value} = props;\n    return (\n        <InfoContainer>\n            <InfoIcon src={WeatherInfoIcons[name]}/>\n            <InfoLabel>\n                {value}\n                <span>{name}</span>\n            </InfoLabel>\n        </InfoContainer>\n    );\n};\nconst WeatherComponent = (props) => {\n    const {weather} = props;\n    const isDay = weather.weather[0].icon.includes('d')\n    const getTime = (timeStamp) => {\n        return `${new Date(timeStamp * 1000).getHours()} : ${new Date(timeStamp * 1000).getMinutes()}`\n    }\n    return (\n        <>\n            <WeatherContainer>\n                <Condition>\n                    <span>{`${Math.floor(weather.main.temp - 273)}Â°C`}</span>\n                    {`  |  ${weather.weather[0].description}`}\n                </Condition>\n                <WeatherInfoComponent name={\"longitude\"} value={weather.coord.lon}/>\n                <WeatherInfoComponent name={\"latitude\"} value={weather.coord.lat}/>\n            </WeatherContainer>\n            <Location>{`${weather.name}, ${weather.sys.country}, City Id: ${weather.sys.id}`}</Location>\n\n            <WeatherInfoLabel>Weather Info</WeatherInfoLabel>\n            <WeatherInfoContainer>\n                <WeatherInfoComponent name={isDay ? \"sunset\" : \"sunrise\"}\n                                      value={`${getTime(weather.sys[isDay ? \"sunset\" : \"sunrise\"])}`}/>\n                <WeatherInfoComponent name={\"humidity\"} value={weather.main.humidity}/>\n                <WeatherInfoComponent name={\"wind\"} value={weather.wind.speed}/>\n                <WeatherInfoComponent name={\"pressure\"} value={weather.main.pressure}/>\n            </WeatherInfoContainer>\n        </>\n    );\n};\n\nexport default WeatherComponent;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport Axios from \"axios\";\nimport CityComponent from \"./modules/CityComponent\";\nimport WeatherComponent from \"./modules/WeatherInfoComponent\";\n\n\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 380px;\n  padding: 20px 10px;\n  margin: auto;\n  border-radius: 4px;\n  box-shadow: 0 3px 6px 0 #555;\n  background: linear-gradient(to bottom right,red,yellow);\n  font-family: Montserrat;\n`;\n\nconst AppLabel = styled.span`\n  color: black;\n  margin: 20px auto;\n  font-size: 18px;\n  font-weight: bold;\n`;\n\n\nfunction App() {\n  const [cityid,updateCityId] = useState();\n  const [city, updateCity] = useState();\n  const [weather, updateWeather] = useState();\n  const fetchWeather = async (e) => {\n    e.preventDefault();\n    const response =  await Axios.get(\n      `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=12cfdf9f37e8a65257b2ef952fe2e702`,\n    );\n    \n    updateWeather(response.data);\n  };\n  const fetchWeatherCityId = async (e) => {\n    e.preventDefault();\n    const response =  await Axios.get(\n      `https://api.openweathermap.org/data/2.5/weather?id=${cityid}&appid=12cfdf9f37e8a65257b2ef952fe2e702`,\n    );\n    \n    updateWeather(response.data);\n  };\n  return (\n    <Container>\n      <AppLabel>React Weather App</AppLabel>\n      {(city && weather) || (cityid && weather) ? (\n        <WeatherComponent weather={weather} city={city} />\n      ) : (\n        <CityComponent updateCity={updateCity} fetchWeather={city ? fetchWeather : fetchWeatherCityId} updateCityId = {updateCityId} />\n      )}\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}